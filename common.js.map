{"version":3,"sources":["webpack:///./src/app/roles/admin-area/angular-services/album.service.ts","webpack:///./src/app/roles/admin-area/angular-services/approval.service.ts","webpack:///./src/app/roles/admin-area/angular-services/banner.service.ts","webpack:///./src/app/roles/admin-area/angular-services/course-category.service.ts","webpack:///./src/app/roles/admin-area/angular-services/course.service.ts","webpack:///./src/app/roles/admin-area/angular-services/download-category.service.ts","webpack:///./src/app/roles/admin-area/angular-services/download.service.ts","webpack:///./src/app/roles/admin-area/angular-services/event.service.ts","webpack:///./src/app/roles/admin-area/angular-services/new-category.service.ts","webpack:///./src/app/roles/admin-area/angular-services/new.service.ts","webpack:///./src/app/roles/admin-area/angular-services/professor.service.ts","webpack:///./src/app/roles/admin-area/angular-services/team.service.ts","webpack:///./src/app/roles/admin-area/angular-services/user.service.ts","webpack:///./src/app/roles/admin-area/classes/user.ts","webpack:///./src/app/roles/site-area/angular-services/approval.service.ts","webpack:///./src/app/roles/site-area/angular-services/course.service.ts","webpack:///./src/app/roles/site-area/components/diferenciais/diferenciais.component.css","webpack:///./src/app/roles/site-area/components/diferenciais/diferenciais.component.html","webpack:///./src/app/roles/site-area/components/diferenciais/diferenciais.component.ts","webpack:///./src/app/roles/site-area/components/diferenciais/diferenciais.module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Album } from '../classes/album';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/albuns`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`AlbumService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('AlbumService: ' + mensagem);\r\n  }\r\n\r\n  getAlbum (keyAlbum: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyAlbum}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched album with id=${keyAlbum}`)),\r\n      catchError(this.handleError<Album>('getAlbum'))\r\n    );\r\n  }\r\n\r\n  getAlbuns (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(tests => this.log(`fetched albuns`)),\r\n      catchError(this.handleError('getAlbuns', []))\r\n    );\r\n  }\r\n\r\n  addAlbum (album: Album): Observable<any> {\r\n    return this.http.post<Album>(`${this.apiURL}`, album, { headers: this.options }).pipe(\r\n      tap((album: Album) => this.log(`added album w/ key=${album._key}`)),\r\n      catchError(this.handleError<Album>('addAlbum'))\r\n    );\r\n  }\r\n\r\n  updateAlbum (keyAlbum: string, album: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyAlbum}`, album, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`album updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Album>('updateAlbum'))\r\n    )\r\n  }\r\n\r\n  removeAlbum (keyAlbum: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyAlbum}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`album deleted with id=${keyAlbum}.`)),\r\n      catchError(this.handleError<Album>('removeAlbum'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Approval } from '../classes/approval';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApprovalService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/approvals`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`ApprovalService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('ApprovalService: ' + mensagem);\r\n  }\r\n\r\n  getApproval (keyApproval: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyApproval}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched approval with id=${keyApproval}`)),\r\n      catchError(this.handleError<Approval>('getApproval'))\r\n    );\r\n  }\r\n\r\n  getApprovals (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(approvals => this.log(`fetched approvals`)),\r\n      catchError(this.handleError('getApprovals', []))\r\n    );\r\n  }\r\n\r\n  addApproval (approval: Approval): Observable<any> {\r\n    return this.http.post<Approval>(`${this.apiURL}`, approval, { headers: this.options }).pipe(\r\n      tap((approval: Approval) => this.log(`added approval w/ key=${approval._key}`)),\r\n      catchError(this.handleError<Approval>('addApproval'))\r\n    );\r\n  }\r\n\r\n  updateApproval (keyApproval: string, approval: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyApproval}`, approval, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`approval updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Approval>('updateApproval'))\r\n    )\r\n  }\r\n\r\n  removeApproval (keyApproval: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyApproval}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`approval deleted with id=${keyApproval}.`)),\r\n      catchError(this.handleError<Approval>('removeApproval'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Banner } from '../classes/banner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BannerService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/banners`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`BannerService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('BannerService: ' + mensagem);\r\n  }\r\n\r\n  getBanner (keyBanner: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyBanner}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched banner with id=${keyBanner}`)),\r\n      catchError(this.handleError<Banner>('getBanner'))\r\n    );\r\n  }\r\n\r\n  getBanners (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(banners => this.log(`fetched banners`)),\r\n      catchError(this.handleError('getBanners', []))\r\n    );\r\n  }\r\n\r\n  addBanner (banner: Banner): Observable<any> {\r\n    return this.http.post<Banner>(`${this.apiURL}`, banner, { headers: this.options }).pipe(\r\n      tap((banner: Banner) => this.log(`added banner w/ key=${banner._id}`)),\r\n      catchError(this.handleError<Banner>('addBanner'))\r\n    );\r\n  }\r\n\r\n  updateBanner (keyBanner: string, banner: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyBanner}`, banner, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`approval banner w/ id=${response._key}`)),\r\n      catchError(this.handleError<Banner>('updateBanner'))\r\n    )\r\n  }\r\n\r\n  removeBanner (keyBanner: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyBanner}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`banner deleted with id=${keyBanner}.`)),\r\n      catchError(this.handleError<Banner>('removeBanner'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CourseCategory } from '../classes/course-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseCategoryService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/courses-category`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`CourseCategoryService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('CourseCategoryService: ' + mensagem);\r\n  }\r\n\r\n  getCategory (keyCategory: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched course category with id=${keyCategory}`)),\r\n      catchError(this.handleError<CourseCategory>('getCategory'))\r\n    );\r\n  }\r\n\r\n  getCategories (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(courseCategories => this.log(`fetched course categories`)),\r\n      catchError(this.handleError('getCategories', []))\r\n    );\r\n  }\r\n\r\n  addCategory (category: CourseCategory): Observable<any> {\r\n    return this.http.post<CourseCategory>(`${this.apiURL}`, category, { headers: this.options }).pipe(\r\n      tap((category: CourseCategory) => this.log(`added course category w/ key=${category._key}`)),\r\n      catchError(this.handleError<CourseCategory >('addCategory'))\r\n    );\r\n  }\r\n\r\n  updateCategory (keyCategory: string, category: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyCategory}`, category, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`course category updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<CourseCategory>('updateCategory'))\r\n    )\r\n  }\r\n\r\n  removeCategory (keyCategory: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`course category deleted with id=${keyCategory}.`)),\r\n      catchError(this.handleError<CourseCategory>('removeCategory'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Course } from '../classes/course';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/courses`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`CourseService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('CourseService: ' + mensagem);\r\n  }\r\n\r\n  getCourse (keyCourse: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCourse}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched course with id=${keyCourse}`)),\r\n      catchError(this.handleError<Course>('getCourse'))\r\n    );\r\n  }\r\n\r\n  getCourses (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(courses => this.log(`fetched courses`)),\r\n      catchError(this.handleError('getCourses', []))\r\n    );\r\n  }\r\n\r\n  addCourse (course: Course): Observable<any> {\r\n    return this.http.post<Course>(`${this.apiURL}`, course, { headers: this.options }).pipe(\r\n      tap((course: Course) => this.log(`added course w/ key=${course._key}`)),\r\n      catchError(this.handleError<Course>('addCourse'))\r\n    );\r\n  }\r\n\r\n  updateCourse (keyCourse: string, course: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyCourse}`, course, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`course updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Course>('updateCourse'))\r\n    )\r\n  }\r\n\r\n  removeCourse (keyCourse: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyCourse}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`course deleted with id=${keyCourse}.`)),\r\n      catchError(this.handleError<Course>('removeCourse'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { DownloadCategory } from '../classes/download-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadCategoryService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/downloads-category`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`DownloadCategoryService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('DownloadCategoryService: ' + mensagem);\r\n  }\r\n\r\n  getCategory (keyCategory: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched download category with id=${keyCategory}`)),\r\n      catchError(this.handleError<DownloadCategory>('getCategory'))\r\n    );\r\n  }\r\n\r\n  getCategories (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(downloadCategories => this.log(`fetched download categories`)),\r\n      catchError(this.handleError('getCategories', []))\r\n    );\r\n  }\r\n\r\n  addCategory (category: DownloadCategory): Observable<any> {\r\n    return this.http.post<DownloadCategory>(`${this.apiURL}`, category, { headers: this.options }).pipe(\r\n      tap((category: DownloadCategory) => this.log(`added download category w/ key=${category._key}`)),\r\n      catchError(this.handleError<DownloadCategory >('addCategory'))\r\n    );\r\n  }\r\n\r\n  updateCategory (keyCategory: string, category: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyCategory}`, category, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`download category updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<DownloadCategory>('updateCategory'))\r\n    )\r\n  }\r\n\r\n  removeCategory (keyCategory: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`download category deleted with id=${keyCategory}.`)),\r\n      catchError(this.handleError<DownloadCategory>('removeCategory'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Download } from '../classes/download';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/downloads`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`DownloadService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('DownloadService: ' + mensagem);\r\n  }\r\n\r\n  getDownload (keyDownload: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyDownload}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched download with id=${keyDownload}`)),\r\n      catchError(this.handleError<Download>('getDownload'))\r\n    );\r\n  }\r\n\r\n  getDownloads (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(downloads => this.log(`fetched downloads`)),\r\n      catchError(this.handleError('getDownloads', []))\r\n    );\r\n  }\r\n\r\n  addDownload (download: Download): Observable<any> {\r\n    return this.http.post<Download>(`${this.apiURL}`, download, { headers: this.options }).pipe(\r\n      tap((download: Download) => this.log(`added download w/ key=${download._key}`)),\r\n      catchError(this.handleError<Download>('addDownload'))\r\n    );\r\n  }\r\n\r\n  updateDownload (keyDownload: string, download: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyDownload}`, download, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`download updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Download>('updateDownload'))\r\n    )\r\n  }\r\n\r\n  removeDownload (keyDownload: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyDownload}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`download deleted with id=${keyDownload}.`)),\r\n      catchError(this.handleError<Download>('removeDownload'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Event } from '../classes/event';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/events`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`EventService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('EventService: ' + mensagem);\r\n  }\r\n\r\n  getEvent (keyEvent: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyEvent}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched event with id=${keyEvent}`)),\r\n      catchError(this.handleError<Event>('getEvent'))\r\n    );\r\n  }\r\n\r\n  getEvents (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(events => this.log(`fetched new events`)),\r\n      catchError(this.handleError('getEvents', []))\r\n    );\r\n  }\r\n\r\n  addEvent (event: Event): Observable<any> {\r\n    return this.http.post<Event>(`${this.apiURL}`, event, { headers: this.options }).pipe(\r\n      tap((event: Event) => this.log(`added event w/ key=${event._key}`)),\r\n      catchError(this.handleError<Event >('addEvent'))\r\n    );\r\n  }\r\n\r\n  updateEvent (keyEvent: string, event: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyEvent}`, event, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`event updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Event>('updateEvent'))\r\n    )\r\n  }\r\n\r\n  removeEvent (keyEvent: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyEvent}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`event deleted with id=${keyEvent}.`)),\r\n      catchError(this.handleError<Event>('removeEvent'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { NewCategory } from '../classes/new-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewCategoryService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/news-category`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`NewCategoryService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('NewCategoryService: ' + mensagem);\r\n  }\r\n\r\n  getCategory (keyCategory: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched new category with id=${keyCategory}`)),\r\n      catchError(this.handleError<NewCategory>('getCategory'))\r\n    );\r\n  }\r\n\r\n  getCategories (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(newCategories => this.log(`fetched new categories`)),\r\n      catchError(this.handleError('getCategories', []))\r\n    );\r\n  }\r\n\r\n  addCategory (category: NewCategory): Observable<any> {\r\n    return this.http.post<NewCategory>(`${this.apiURL}`, category, { headers: this.options }).pipe(\r\n      tap((category: NewCategory) => this.log(`added new category w/ key=${category._key}`)),\r\n      catchError(this.handleError<NewCategory >('addCategory'))\r\n    );\r\n  }\r\n\r\n  updateCategory (keyCategory: string, category: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyCategory}`, category, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`new category updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<NewCategory>('updateCategory'))\r\n    )\r\n  }\r\n\r\n  removeCategory (keyCategory: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyCategory}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`new category deleted with id=${keyCategory}.`)),\r\n      catchError(this.handleError<NewCategory>('removeCategory'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { New } from '../classes/new';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/news`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`NewService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('NewService: ' + mensagem);\r\n  }\r\n\r\n  getNew (keyNew: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyNew}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched news with id=${keyNew}`)),\r\n      catchError(this.handleError<New>('getNew'))\r\n    );\r\n  }\r\n\r\n  getNews (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(news => this.log(`fetched news`)),\r\n      catchError(this.handleError('getNews', []))\r\n    );\r\n  }\r\n\r\n  addNew (news: New): Observable<any> {\r\n    return this.http.post<New>(`${this.apiURL}`, news, { headers: this.options }).pipe(\r\n      tap((news: New) => this.log(`added news w/ key=${news._key}`)),\r\n      catchError(this.handleError<New>('addNew'))\r\n    );\r\n  }\r\n\r\n  updateNew (keyNew: string, news: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyNew}`, news, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`news updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<New>('updateNew'))\r\n    )\r\n  }\r\n\r\n  removeNew (keyNew: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyNew}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`news deleted with id=${keyNew}.`)),\r\n      catchError(this.handleError<New>('removeNew'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Professor } from '../classes/professor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfessorService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/professors`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`ProfessorService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('ProfessorService: ' + mensagem);\r\n  }\r\n\r\n  getProfessor (keyProfessor: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyProfessor}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched professor with id=${keyProfessor}`)),\r\n      catchError(this.handleError<Professor>('getProfessor'))\r\n    );\r\n  }\r\n\r\n  getProfessors (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(professors => this.log(`fetched professor categories`)),\r\n      catchError(this.handleError('getProfessors', []))\r\n    );\r\n  }\r\n\r\n  addProfessor (professor: Professor): Observable<any> {\r\n    return this.http.post<Professor>(`${this.apiURL}`, professor, { headers: this.options }).pipe(\r\n      tap((professor: Professor) => this.log(`added professor w/ key=${professor._key}`)),\r\n      catchError(this.handleError<Professor >('addProfessor'))\r\n    );\r\n  }\r\n\r\n  updateProfessor (keyProfessor: string, professor: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyProfessor}`, professor, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`professor updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Professor>('updateProfessor'))\r\n    )\r\n  }\r\n\r\n  removeProfessor (keyProfessor: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyProfessor}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`professor deleted with id=${keyProfessor}.`)),\r\n      catchError(this.handleError<Professor>('removeProfessor'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Team } from '../classes/team';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TeamService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/teams`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`TeamService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('TeamService: ' + mensagem);\r\n  }\r\n\r\n  getTeam (keyTeam: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyTeam}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched team with id=${keyTeam}`)),\r\n      catchError(this.handleError<Team>('getTeam'))\r\n    );\r\n  }\r\n\r\n  getTeams (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(teams => this.log(`fetched teams`)),\r\n      catchError(this.handleError('getTeams', []))\r\n    );\r\n  }\r\n\r\n  addTeam (team: Team): Observable<any> {\r\n    return this.http.post<Team>(`${this.apiURL}`, team, { headers: this.options }).pipe(\r\n      tap((team: Team) => this.log(`added team w/ key=${team._key}`)),\r\n      catchError(this.handleError<Team>('addTeam'))\r\n    );\r\n  }\r\n\r\n  updateTeam (keyTeam: string, team: any): Observable<any> {\r\n    return this.http.put(`${this.apiURL}/${keyTeam}`, team, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`team updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<Team>('updateTeam'))\r\n    )\r\n  }\r\n\r\n  removeTeam (keyTeam: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyTeam}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`team deleted with id=${keyTeam}.`)),\r\n      catchError(this.handleError<Team>('removeTeam'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { AuthService } from './auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { User } from '../classes/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/users`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService, private authService: AuthService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json', 'x-access-token': localStorage.getItem('tokenUserLogged')} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n      reload = this.authService.logoff();\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`UserService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('UserService: ' + mensagem);\r\n  }\r\n\r\n  getUser (keyUser: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyUser}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched user with id=${keyUser}`)),\r\n      catchError(this.handleError<User>('getUser'))\r\n    );\r\n  }\r\n\r\n  getUsers (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}`, { headers: this.options }).pipe(\r\n      tap(users => this.log(`fetched users`)),\r\n      catchError(this.handleError('getUsers', []))\r\n    );\r\n  }\r\n\r\n  addUser (user: User): Observable<any> {\r\n    return this.http.post<User>(`${this.apiURL}`, user, { headers: this.options }).pipe(\r\n      tap((user: User) => this.log(`added user w/ key=${user._key}`)),\r\n      catchError(this.handleError<User>('addUser'))\r\n    );\r\n  }\r\n\r\n  updateUser (keyUser: string, user: any): Observable<User> {\r\n    return this.http.put(`${this.apiURL}/${keyUser}`, user, { headers: this.options }).pipe(\r\n      tap((response: any) => this.log(`user updated w/ id=${response._key}`)),\r\n      catchError(this.handleError<User>('updateUser'))\r\n    )\r\n  }\r\n\r\n  removeUser (keyUser: string): Observable<any> {\r\n    return this.http.delete(`${this.apiURL}/${keyUser}`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`user deleted with id=${keyUser}.`)),\r\n      catchError(this.handleError<User>('removeUser'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","export class User {\r\n    _id: string;\r\n    _key: string;\r\n    user: string;\r\n    password: string;\r\n    status: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Approval } from '../classes/approval';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApprovalService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/approvals`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json'} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`ApprovalService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('ApprovalService: ' + mensagem);\r\n  }\r\n\r\n  getApproval (keyApproval: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyApproval}/active`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched approval with id=${keyApproval}`)),\r\n      catchError(this.handleError<Approval>('getApproval'))\r\n    );\r\n  }\r\n\r\n  getApprovals (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}/active`, { headers: this.options }).pipe(\r\n      tap(approvals => this.log(`fetched approvals`)),\r\n      catchError(this.handleError('getApprovals', []))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Course } from '../classes/course';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/courses`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json'} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`CourseService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('CourseService: ' + mensagem);\r\n  }\r\n\r\n  getCourse (keyCourse: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCourse}/active`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched course with id=${keyCourse}`)),\r\n      catchError(this.handleError<Course>('getCourse'))\r\n    );\r\n  }\r\n\r\n  getCourses (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}/active`, { headers: this.options }).pipe(\r\n      tap(courses => this.log(`fetched courses`)),\r\n      catchError(this.handleError('getCourses', []))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","module.exports = \".title-section {\\r\\n  line-height: 35px;\\r\\n}\\r\\n\\r\\n.differentials {\\r\\n  margin-top: 15px;\\r\\n  margin-left: 0px;\\r\\n  margin-right: 0px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.differentials > a {\\r\\n  text-decoration: none;\\r\\n  color: inherit;\\r\\n}\\r\\n\\r\\n.differential > img {\\r\\n  width: 90px;\\r\\n}\\r\\n\\r\\n.differential > p {\\r\\n  margin-top: 15px;\\r\\n  width: 220px;\\r\\n  text-align: center;\\r\\n  margin: 25px auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvc2l0ZS1hcmVhL2NvbXBvbmVudHMvZGlmZXJlbmNpYWlzL2RpZmVyZW5jaWFpcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9yb2xlcy9zaXRlLWFyZWEvY29tcG9uZW50cy9kaWZlcmVuY2lhaXMvZGlmZXJlbmNpYWlzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUtc2VjdGlvbiB7XHJcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5kaWZmZXJlbnRpYWxzIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uZGlmZmVyZW50aWFscyA+IGEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG5cclxuLmRpZmZlcmVudGlhbCA+IGltZyB7XHJcbiAgd2lkdGg6IDkwcHg7XHJcbn1cclxuXHJcbi5kaWZmZXJlbnRpYWwgPiBwIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIHdpZHRoOiAyMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAyNXB4IGF1dG87XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 text-center\\\">\\r\\n      <h3 class=\\\"title-section\\\">Muito mais que um cursinho!</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row differentials\\\">\\r\\n    <a routerLink=\\\"/equipes\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/classroom.png\\\">\\r\\n        <p>A melhor equipe de professores.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/simulados\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/test.png\\\">\\r\\n        <p>Simulados no nível de ENEM, Concursos Públicos e Processos Seletivos.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/sala-de-estudos\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/library.png\\\">\\r\\n        <p>Sala de Estudos e Laboratório de Redação.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"row differentials\\\">\\r\\n    <a routerLink=\\\"/material\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/material.png\\\">\\r\\n        <p>Material completo com módulos de teoria e questões.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/coach\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/coach.png\\\">\\r\\n        <p>Serviço de Coach e Assessoria ao aluno.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/equipe-administrativa\\\">\\r\\n      <div class=\\\"col-md-4 differential\\\">\\r\\n        <img src=\\\"../../../../assets/img/team.png\\\">\\r\\n        <p>Equipe administrativa pronta para atendê-lo.</p>\\r\\n      </div>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diferenciais',\r\n  templateUrl: './diferenciais.component.html',\r\n  styleUrls: ['./diferenciais.component.css']\r\n})\r\nexport class DiferenciaisComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { DiferenciaisComponent } from './diferenciais.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NgbModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    DiferenciaisComponent,\r\n  ],\r\n  exports: [\r\n    DiferenciaisComponent\r\n  ]\r\n})\r\nexport class DiferenciaisModule { }\r\n"],"sourceRoot":""}