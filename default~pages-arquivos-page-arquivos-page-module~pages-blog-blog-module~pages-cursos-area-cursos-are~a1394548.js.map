{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/observable/of.js","webpack:///./src/app/roles/site-area/angular-services/email.service.ts","webpack:///./src/app/roles/site-area/angular-services/logger.service.ts","webpack:///./src/app/roles/site-area/components/contact-form/contact-form.component.css","webpack:///./src/app/roles/site-area/components/contact-form/contact-form.component.html","webpack:///./src/app/roles/site-area/components/contact-form/contact-form.component.ts","webpack:///./src/app/roles/site-area/components/contact-form/contact-form.module.ts","webpack:///./src/app/roles/site-area/components/contatos/contatos.component.css","webpack:///./src/app/roles/site-area/components/contatos/contatos.component.html","webpack:///./src/app/roles/site-area/components/contatos/contatos.component.ts","webpack:///./src/app/roles/site-area/components/contatos/contatos.module.ts"],"names":[],"mappings":"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","file":"default~pages-arquivos-page-arquivos-page-module~pages-blog-blog-module~pages-cursos-area-cursos-are~a1394548.js","sourcesContent":["export { of } from 'rxjs';\n//# sourceMappingURL=of.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class EmailService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/emails`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json'} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`EmailsService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('EmailsService: ' + mensagem);\r\n  }\r\n\r\n  sendEmail (body: string, subject: string): Observable<any> {\r\n    return this.http.post<string>(this.apiURL, {corpo: body, assunto: subject}, httpOptions).pipe(\r\n      tap((response: any) => this.log(`email sended: response: ${response.message}`)),\r\n      catchError(this.handleError<string>('sendEmail'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n\r\n  logs: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  add(log: string){\r\n    this.logs.push(log);\r\n    //console.log(log);\r\n  }\r\n\r\n  clear(){\r\n    this.logs = [];\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3NpdGUtYXJlYS9jb21wb25lbnRzL2NvbnRhY3QtZm9ybS9jb250YWN0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"sugerir-curso-container\\\">\\r\\n  <div class=\\\"col-md-12\\\" *ngIf=\\\"resposta\\\">\\r\\n    <div class=\\\"alert alert-{{ tipoResposta }} alert-dismissable\\\" role=\\\"alert\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n      <p>{{ resposta }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"formContact\\\" (ngSubmit)=\\\"send()\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Nome</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Celular</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Mensagem</label>\\r\\n        <textarea class=\\\"form-control\\\" rows=\\\"5\\\" formControlName=\\\"message\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <button class=\\\"btn btn-md btn-default\\\" [disabled]=\\\"formContact.invalid\\\">Enviar</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { EmailService } from '../../angular-services/email.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-form',\r\n  templateUrl: './contact-form.component.html',\r\n  styleUrls: ['./contact-form.component.css']\r\n})\r\nexport class ContactFormComponent implements OnInit {\r\n\r\n  formContact: FormGroup;\r\n  resposta: string;\r\n  tipoResposta: string;\r\n\r\n  constructor(private emailService: EmailService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.formContact = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', Validators.required),\r\n      phone: new FormControl('', Validators.required),\r\n      message: new FormControl('', Validators.required)\r\n    })\r\n  }\r\n\r\n  send() {\r\n    if (this.formContact.valid) {\r\n      let data = this.formContact.value;\r\n      let date = new Date();\r\n      let body = `\r\n        Nome: ${data.name}\r\n        Email: ${data.email}\r\n        Celular: ${data.phone}\r\n        Mensagem: ${data.message}\r\n        Data: ${date}\r\n      `;\r\n      this.emailService.sendEmail(body, 'Contato').subscribe(\r\n        response => {\r\n          if(response) {\r\n            this.resposta = response.message;\r\n            if (response.status == 'success') {\r\n              this.tipoResposta = response.status;\r\n            } else {\r\n              this.tipoResposta == 'danger';\r\n            }\r\n          }else{\r\n            this.tipoResposta = 'danger';\r\n            this.resposta = 'Falha ao enviar o email. Tente novamente em instantes.';\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ContactFormComponent } from './contact-form.component';\r\nimport { EmailService } from '../../angular-services/email.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    ContactFormComponent,\r\n  ],\r\n  exports: [\r\n    ContactFormComponent\r\n  ],\r\n  providers: [\r\n    EmailService\r\n  ]\r\n})\r\nexport class ContactFormModule { }\r\n","module.exports = \".title-section {\\r\\n  color: rgb(244,50,34);\\r\\n  line-height: 35px; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvc2l0ZS1hcmVhL2NvbXBvbmVudHMvY29udGF0b3MvY29udGF0b3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9yb2xlcy9zaXRlLWFyZWEvY29tcG9uZW50cy9jb250YXRvcy9jb250YXRvcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlLXNlY3Rpb24ge1xyXG4gIGNvbG9yOiByZ2IoMjQ0LDUwLDM0KTtcclxuICBsaW5lLWhlaWdodDogMzVweDsgXHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"col-md-12 text-center\\\">\\r\\n      <h3 class=\\\"title-section\\\">Quer ser nosso aluno?<br> Entre em contato conosco!</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"\\\">\\r\\n      <div class=\\\"contacts\\\">\\r\\n        <app-contact-form></app-contact-form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contatos',\r\n  templateUrl: './contatos.component.html',\r\n  styleUrls: ['./contatos.component.css']\r\n})\r\nexport class ContatosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContatosComponent } from './contatos.component';\r\nimport { ContactFormModule } from '../contact-form/contact-form.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ContactFormModule\r\n  ],\r\n  declarations: [\r\n    ContatosComponent\r\n  ],\r\n  exports: [\r\n    ContatosComponent\r\n  ]\r\n})\r\nexport class ContatosModule { }\r\n"],"sourceRoot":""}