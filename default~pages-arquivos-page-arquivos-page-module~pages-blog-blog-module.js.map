{"version":3,"sources":["webpack:///./src/app/roles/site-area/angular-services/download-category.service.ts","webpack:///./src/app/roles/site-area/angular-services/download.service.ts","webpack:///./src/app/roles/site-area/components/downloads/downloads.component.css","webpack:///./src/app/roles/site-area/components/downloads/downloads.component.html","webpack:///./src/app/roles/site-area/components/downloads/downloads.component.ts","webpack:///./src/app/roles/site-area/components/downloads/downloads.module.ts"],"names":[],"mappings":"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","file":"default~pages-arquivos-page-arquivos-page-module~pages-blog-blog-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { DownloadCategory } from '../classes/download-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadCategoryService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/downloads-category`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json'} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`DownloadCategoryService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('DownloadCategoryService: ' + mensagem);\r\n  }\r\n\r\n  getCategory (keyCategory: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyCategory}/active`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched download category with id=${keyCategory}`)),\r\n      catchError(this.handleError<DownloadCategory>('getCategory'))\r\n    );\r\n  }\r\n\r\n  getCategories (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}/active`, { headers: this.options }).pipe(\r\n      tap(downloadCategories => this.log(`fetched download categories`)),\r\n      catchError(this.handleError('getCategories', []))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Download } from '../classes/download';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n  private apiURL: string = `${environment.apiURL}/downloads`;\r\n  options: HttpHeaders = new HttpHeaders();\r\n  session: any = {};\r\n\r\n  constructor(private http: HttpClient, private loggerService: LoggerService) {\r\n    this.options = new HttpHeaders( {'Content-Type': 'application/json'} );\r\n  }\r\n\r\n  private logError (error, operation) {\r\n    let message = '';\r\n    let reload = false;\r\n    if (error.status === 404) {\r\n      message = 'Falha ao se comunicar com a API: Rota não encontrada (ERRO 404)';\r\n    } else if (error.status === 401) {\r\n      message = 'Falha ao se comunicar com a API: Token inválido ou expirado';\r\n    } else if (error.status === 400) {\r\n      message = `Os dados enviados são inválidos! \\nCausa do erro: ${error.error.details[0].message}`;\r\n    } else if (error.status >= 500 && error.status <= 505) {\r\n      message = `Houve algum erro no servidor! Entre em contato com o administrador!`;\r\n    } else {\r\n      message = error.Message;\r\n    }\r\n\r\n    this.loggerService.add(`DownloadService failed on operation: ${operation}\\nMessage: ${message}`);\r\n    if (reload) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  private log (mensagem: string) {\r\n    this.loggerService.add('DownloadService: ' + mensagem);\r\n  }\r\n\r\n  getDownload (keyDownload: string): Observable<any> {\r\n    return this.http.get(`${this.apiURL}/${keyDownload}/active`, { headers: this.options }).pipe(\r\n      tap(_ => this.log(`fetched download with id=${keyDownload}`)),\r\n      catchError(this.handleError<Download>('getDownload'))\r\n    );\r\n  }\r\n\r\n  getDownloads (): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiURL}/active`, { headers: this.options }).pipe(\r\n      tap(downloads => this.log(`fetched downloads`)),\r\n      catchError(this.handleError('getDownloads', []))\r\n    );\r\n  }\r\n  \r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logError(error, operation);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}","module.exports = \".downloads-container {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.downloads-container a {\\r\\n  text-decoration: none;\\r\\n  color: inherit;\\r\\n}\\r\\n\\r\\n.numeros-de-paginacao {\\r\\n  padding: 0;\\r\\n  text-align: right;\\r\\n  list-style: none;\\r\\n}\\r\\n\\r\\n.numeros-de-paginacao li {\\r\\n  margin-left: 10px;\\r\\n  margin-right: 10px;\\r\\n  margin-top: 10px;\\r\\n  cursor: pointer;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.numeros-de-paginacao > li > a {\\r\\n  background-color: #F5F5F5;\\r\\n  text-decoration: none;\\r\\n  color: rgb(244,50,34);\\r\\n  padding-left: 15px;\\r\\n  padding-right: 15px;\\r\\n  border-radius: 2em;\\r\\n}\\r\\n\\r\\n.lista-de-downloads {\\r\\n  margin-top: 45px;\\r\\n}\\r\\n\\r\\n.download img {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.lista-de-downloads h5 {\\r\\n  line-height: 20px;\\r\\n}\\r\\n\\r\\n.pagina-ativa {\\r\\n  background-color: rgb(244,50,34) !important;\\r\\n  text-decoration: none;\\r\\n  color: white !important;\\r\\n  padding-left: 15px;\\r\\n  padding-right: 15px;\\r\\n  border-radius: 2em;\\r\\n}\\r\\n\\r\\n.categoria-download {\\r\\n  cursor: pointer;\\r\\n  padding-top: 4px;\\r\\n  padding-bottom: 4px;\\r\\n}\\r\\n\\r\\n.ativo {\\r\\n  background-color: rgb(244,50,34);\\r\\n  color: white !important;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.container-box {\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n/* Extra small devices (phones, less than 768px) */\\r\\n\\r\\n/* No media query since this is the default in Bootstrap */\\r\\n\\r\\n/* Small devices (tablets, 768px and up) */\\r\\n\\r\\n@media (min-width: 1200px) {\\r\\n  .container-box {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvc2l0ZS1hcmVhL2NvbXBvbmVudHMvZG93bmxvYWRzL2Rvd25sb2Fkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLHFCQUFxQjtFQUNyQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDJDQUEyQztFQUMzQyxxQkFBcUI7RUFDckIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsdUJBQXVCO0VBQ3ZCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFHQSxrREFBa0Q7O0FBQ2xELDBEQUEwRDs7QUFFMUQsMENBQTBDOztBQUMxQztFQUNFO0lBQ0UsYUFBYTtJQUNiLHFDQUFxQztFQUN2QztBQUNGIiwiZmlsZSI6InNyYy9hcHAvcm9sZXMvc2l0ZS1hcmVhL2NvbXBvbmVudHMvZG93bmxvYWRzL2Rvd25sb2Fkcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvd25sb2Fkcy1jb250YWluZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmRvd25sb2Fkcy1jb250YWluZXIgYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG59XHJcblxyXG4ubnVtZXJvcy1kZS1wYWdpbmFjYW8ge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLm51bWVyb3MtZGUtcGFnaW5hY2FvIGxpIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4ubnVtZXJvcy1kZS1wYWdpbmFjYW8gPiBsaSA+IGEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiByZ2IoMjQ0LDUwLDM0KTtcclxuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICBib3JkZXItcmFkaXVzOiAyZW07XHJcbn1cclxuXHJcbi5saXN0YS1kZS1kb3dubG9hZHMge1xyXG4gIG1hcmdpbi10b3A6IDQ1cHg7XHJcbn1cclxuXHJcbi5kb3dubG9hZCBpbWcge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubGlzdGEtZGUtZG93bmxvYWRzIGg1IHtcclxuICBsaW5lLWhlaWdodDogMjBweDtcclxufVxyXG5cclxuLnBhZ2luYS1hdGl2YSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NCw1MCwzNCkgIWltcG9ydGFudDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMmVtO1xyXG59XHJcblxyXG4uY2F0ZWdvcmlhLWRvd25sb2FkIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcGFkZGluZy10b3A6IDRweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNHB4O1xyXG59XHJcblxyXG4uYXRpdm8ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDQsNTAsMzQpO1xyXG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmNvbnRhaW5lci1ib3gge1xyXG4gIGRpc3BsYXk6IGluaGVyaXQ7XHJcbn1cclxuXHJcblxyXG4vKiBFeHRyYSBzbWFsbCBkZXZpY2VzIChwaG9uZXMsIGxlc3MgdGhhbiA3NjhweCkgKi9cclxuLyogTm8gbWVkaWEgcXVlcnkgc2luY2UgdGhpcyBpcyB0aGUgZGVmYXVsdCBpbiBCb290c3RyYXAgKi9cclxuXHJcbi8qIFNtYWxsIGRldmljZXMgKHRhYmxldHMsIDc2OHB4IGFuZCB1cCkgKi9cclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gIC5jb250YWluZXItYm94IHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"downloads-container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-6 col-md-3\\\">\\r\\n            <a (click)=\\\"selectAll()\\\" *ngIf=\\\"!categorySelected\\\"><h3 class=\\\"categoria-noticia ativo\\\">Todos</h3></a>\\r\\n            <a (click)=\\\"selectAll()\\\" *ngIf=\\\"categorySelected\\\"><h3 class=\\\"categoria-noticia\\\">Todos</h3></a>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-6 col-md-3\\\" *ngFor=\\\"let category of categories\\\">\\r\\n            <a (click)=\\\"selectCategory(category)\\\" *ngIf=\\\"categorySelected == category\\\"><h3 class=\\\"categoria-download ativo\\\">{{ category.title }}</h3></a>\\r\\n            <a (click)=\\\"selectCategory(category)\\\" *ngIf=\\\"categorySelected != category\\\"><h3 class=\\\"categoria-download\\\">{{ category.title }}</h3></a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showPages\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <ul class=\\\"numeros-de-paginacao\\\">\\r\\n            <li *ngFor=\\\"let page of pages\\\">\\r\\n              <a (click)=\\\"selectPage(page)\\\" *ngIf=\\\"pageSelected == page\\\" class=\\\"pagina-ativa\\\">{{ page.pageNumber }}</a>\\r\\n              <a (click)=\\\"selectPage(page)\\\" *ngIf=\\\"pageSelected != page\\\">{{ page.pageNumber }}</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"pageSelected\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-3 col-md-2 download\\\" *ngFor=\\\"let download of pageSelected.content\\\">\\r\\n            <a href=\\\"{{ download.download.file }}\\\" download>\\r\\n              <img src=\\\"../../../../assets/img/pdf-icon.png\\\" *ngIf=\\\"download.download.file.search('.pdf') > 1 || download.download.file.search('.docx') > 1\\\">\\r\\n              <img src=\\\"../../../../assets/img/png-icon.png\\\" *ngIf=\\\"download.download.file.search('.jpg') > 1 || download.download.file.search('.jpeg') > 1 || download.download.file.search('.png') > 1\\\">\\r\\n            </a>\\r\\n            <div>\\r\\n              <h5>{{ download.download.title }}</h5>\\r\\n              <p>{{ download.download.date | date: 'dd/MM/yyyy' }}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { DownloadCategory } from '../../classes/download-category';\r\nimport { DownloadCategoryService } from '../../angular-services/download-category.service';\r\nimport { Download } from '../../classes/download';\r\nimport { DownloadService } from '../../angular-services/download.service';\r\nimport { Page } from '../../classes/page';\r\nimport { PagerService } from '../../angular-services/pager.service';\r\n\r\n@Component({\r\n  selector: 'app-downloads',\r\n  templateUrl: './downloads.component.html',\r\n  styleUrls: ['./downloads.component.css']\r\n})\r\nexport class DownloadsComponent implements OnInit {\r\n\r\n  @Input('amountDownloads') amountDownloads: number;\r\n  @Input('amountDownloadsPerPage') amountPerPage: number;\r\n  showPages: boolean = true;\r\n  downloads: Download[] = [];\r\n  downloadsPerCategory: Download[] = [];\r\n  categories: DownloadCategory[] = [];\r\n  categorySelected: DownloadCategory;\r\n  pageSelected: Page;\r\n  pages: Page[] = [];\r\n\r\n  constructor(private downloadService: DownloadService, private downloadCategoryService: DownloadCategoryService, private pagerService: PagerService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDownloads();\r\n    this.getCategories();\r\n  }\r\n\r\n  verifyPages() {\r\n    if ((this.amountDownloads - this.amountPerPage) > 0) {\r\n      this.showPages = true;\r\n    } else {\r\n      this.showPages = false;\r\n    }\r\n  }\r\n\r\n  getDownloads() {\r\n    this.downloadService.getDownloads().subscribe(\r\n      downloads => {\r\n        this.downloads = downloads;\r\n        this.downloadsPerCategory = downloads;\r\n        this.pages = this.pagerService.fillPages(downloads, this.amountPerPage, this.amountDownloads);\r\n        this.pageSelected = this.pages[0];\r\n        this.verifyPages();\r\n      }\r\n    );\r\n  }\r\n\r\n  getCategories() {\r\n    this.downloadCategoryService.getCategories().subscribe(\r\n      response => {\r\n        this.categories = response;\r\n      }\r\n    );\r\n  }\r\n\r\n  selectPage(page: Page){\r\n    this.pageSelected = page;\r\n  }\r\n\r\n  selectAll() {\r\n    if(this.categorySelected != null) {\r\n      this.categorySelected = null;\r\n      this.downloadsPerCategory = this.downloads;\r\n      this.pages = this.pagerService.fillPages(this.downloadsPerCategory, this.amountPerPage, this.amountDownloads);\r\n      this.pageSelected = this.pages[0];\r\n      this.verifyPages();\r\n    }\r\n  }\r\n\r\n  selectCategory(category){\r\n    if(category != this.categorySelected) {\r\n      this.categorySelected = category;\r\n      this.downloadsPerCategory = [];\r\n      for (let download of this.downloads) {\r\n        if (download.category._id == this.categorySelected._id) {\r\n          this.downloadsPerCategory.push(download);\r\n        }\r\n      }\r\n      this.pages = this.pagerService.fillPages(this.downloadsPerCategory, this.amountPerPage, this.amountDownloads);\r\n      this.pageSelected = this.pages[0];\r\n      this.verifyPages();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { DownloadsComponent } from './downloads.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NgbModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    DownloadsComponent,\r\n  ],\r\n  exports: [\r\n    DownloadsComponent\r\n  ]\r\n})\r\nexport class DownloadsModule { }\r\n"],"sourceRoot":""}