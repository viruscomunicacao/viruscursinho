{"version":3,"sources":["webpack:///./src/app/roles/admin-area/classes/professor.ts","webpack:///./src/app/roles/admin-area/components/edit-professor-form/edit-professor-form.component.css","webpack:///./src/app/roles/admin-area/components/edit-professor-form/edit-professor-form.component.html","webpack:///./src/app/roles/admin-area/components/edit-professor-form/edit-professor-form.component.ts","webpack:///./src/app/roles/admin-area/components/edit-professor-form/edit-professor-form.module.ts","webpack:///./src/app/roles/admin-area/pages/edit-professor-page/edit-professor-page-routing.module.ts","webpack:///./src/app/roles/admin-area/pages/edit-professor-page/edit-professor-page.component.css","webpack:///./src/app/roles/admin-area/pages/edit-professor-page/edit-professor-page.component.html","webpack:///./src/app/roles/admin-area/pages/edit-professor-page/edit-professor-page.component.ts","webpack:///./src/app/roles/admin-area/pages/edit-professor-page/edit-professor-page.module.ts"],"names":[],"mappings":"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","file":"pages-edit-professor-page-edit-professor-page-module.js","sourcesContent":["export class Professor {\r\n    _id: string;\r\n    _key: string;\r\n    name: string;\r\n    description: string;\r\n    status: boolean;\r\n    idTeam: string;\r\n    team: any;\r\n}","module.exports = \".clearrow-20 {\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.btn-group > button {\\r\\n    margin-right: 7px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvYWRtaW4tYXJlYS9jb21wb25lbnRzL2VkaXQtcHJvZmVzc29yLWZvcm0vZWRpdC1wcm9mZXNzb3ItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL2FkbWluLWFyZWEvY29tcG9uZW50cy9lZGl0LXByb2Zlc3Nvci1mb3JtL2VkaXQtcHJvZmVzc29yLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbGVhcnJvdy0yMCB7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5idG4tZ3JvdXAgPiBidXR0b24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA3cHg7XHJcbn0iXX0= */\"","module.exports = \"<h1>Editar professor</h1>\\r\\n<p>Preencha todos os campos abaixo.</p>\\r\\n<div class=\\\"clearrow-20\\\"></div>\\r\\n<div class=\\\"alert alert-{{ alert.type }}\\\" role=\\\"alert\\\" *ngIf=\\\"alert.show\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"alert.show = false\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>{{ alert.message }}</div>\\r\\n<form [formGroup]=\\\"formEditProfessor\\\" (ngSubmit)=\\\"save()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Nome <span *ngIf=\\\"formEditProfessor.controls.name.invalid\\\">*</span></label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Status <span *ngIf=\\\"formEditProfessor.controls.status.invalid\\\">*</span></label>\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"status\\\">\\r\\n          <option value=\\\"true\\\">Ativo</option>\\r\\n          <option value=\\\"false\\\">Inativo</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Equipe <span *ngIf=\\\"formEditProfessor.controls.idTeam.invalid\\\">*</span></label>\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"idTeam\\\">\\r\\n          <option *ngFor=\\\"let team of teams\\\" value=\\\"{{ team._key }}\\\">{{ team.name }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Descrição <span *ngIf=\\\"formEditProfessor.controls.description.invalid\\\">*</span></label>\\r\\n        <app-ngx-editor [spellcheck]=\\\"true\\\" [minHeight]=\\\"30\\\" formControlName=\\\"description\\\"></app-ngx-editor>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group btn-group\\\">\\r\\n        <button class=\\\"btn btn-md btn-default\\\" [disabled]=\\\"formEditProfessor.invalid\\\"><span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Salvar</button>\\r\\n        <a class=\\\"btn btn-md btn-default\\\" routerLink=\\\"/admin/professors\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span> Cancelar</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProfessorService } from '../../angular-services/professor.service';\r\nimport { TeamService } from '../../angular-services/team.service';\r\nimport { Team } from '../../classes/team';\r\nimport { Professor } from '../../classes/professor';\r\n\r\n@Component({\r\n  selector: 'app-edit-professor-form-admin',\r\n  templateUrl: './edit-professor-form.component.html',\r\n  styleUrls: ['./edit-professor-form.component.css']\r\n})\r\nexport class EditProfessorFormComponent implements OnInit {\r\n\r\n  @Output() professorName = new EventEmitter<string>();\r\n  formEditProfessor: FormGroup;\r\n  teams: Team[] = [];\r\n  alert: any = { type: '', message: '', show: false };\r\n  professor: Professor = new Professor();\r\n\r\n  constructor(private professorService: ProfessorService, private teamService: TeamService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.getProfessor();\r\n    this.getTeams();\r\n  }\r\n\r\n  initForm() {\r\n    this.formEditProfessor = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n      idTeam: new FormControl('', Validators.required),\r\n      status: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  loadForm() {\r\n    this.formEditProfessor.patchValue({\r\n      name: this.professor.name,\r\n      description: this.professor.description,\r\n      idTeam: this.professor.idTeam,\r\n      status: this.professor.status\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.formEditProfessor.valid) {\r\n      let data = this.formEditProfessor.value;\r\n      if (data.status === \"true\") {\r\n        data.status = true;\r\n      } else {\r\n        data.status = false;\r\n      }\r\n      this.professorService.addProfessor(data).subscribe(\r\n        response => {\r\n          if (response !== undefined) {\r\n            this.alert.type = 'success';\r\n            this.alert.message = 'Dados salvos com sucesso!';\r\n            this.alert.show = true;\r\n          } else {\r\n            this.alert.type = 'danger';\r\n            this.alert.message = 'Houve algum erro ao salvar os dados!';\r\n            this.alert.show = true;\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  getTeams() {\r\n    this.teamService.getTeams().subscribe(\r\n      response => {\r\n        if (response !== undefined) {\r\n          for (let team of response) {\r\n            if (team.status) {\r\n              this.teams.push(team);\r\n            }\r\n          }\r\n        } else {\r\n          this.alert.type = 'danger';\r\n          this.alert.message = 'Houve algum erro ao carregar os dados!';\r\n          this.alert.show = true;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  getProfessor() {\r\n    let key = this.route.snapshot.paramMap.get('id');\r\n    this.professorService.getProfessor(key).subscribe(\r\n      response => {\r\n        if (response !== undefined) {\r\n          this.professor = response.professor;\r\n          this.professor.idTeam = response.team._key;\r\n          this.professorName.emit(this.professor.name);\r\n          this.loadForm();\r\n        } else {\r\n          this.alert.type = 'danger';\r\n          this.alert.message = 'Houve algum erro ao salvar os dados!';\r\n          this.alert.show = true;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxEditorModule } from 'ngx-editor';\r\n\r\nimport { EditProfessorFormComponent } from './edit-professor-form.component';\r\nimport { ProfessorService } from '../../angular-services/professor.service';\r\nimport { TeamService } from '../../angular-services/team.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgxEditorModule\r\n  ],\r\n  declarations: [\r\n    EditProfessorFormComponent\r\n  ],\r\n  exports: [\r\n    EditProfessorFormComponent\r\n  ],\r\n  providers: [\r\n    ProfessorService,\r\n    TeamService\r\n  ]\r\n})\r\nexport class EditProfessorFormModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { EditProfessorPageComponent } from './edit-professor-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: EditProfessorPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class EditProfessorPageRoutingModule { }\r\n","module.exports = \".content {\\r\\n    min-height: 80vh;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXMvYWRtaW4tYXJlYS9wYWdlcy9lZGl0LXByb2Zlc3Nvci1wYWdlL2VkaXQtcHJvZmVzc29yLXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL2FkbWluLWFyZWEvcGFnZXMvZWRpdC1wcm9mZXNzb3ItcGFnZS9lZGl0LXByb2Zlc3Nvci1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcbiAgICBtaW4taGVpZ2h0OiA4MHZoO1xyXG59Il19 */\"","module.exports = \"<app-navbar-admin></app-navbar-admin>\\r\\n<div class=\\\"content\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/admin/home\\\">Início</a></li>\\r\\n      <li><a routerLink=\\\"/admin/teams\\\">Equipes</a></li>\\r\\n      <li><a routerLink=\\\"/admin/professors\\\">Professores</a></li>\\r\\n      <li class=\\\"active\\\">{{ professorName }}</li>\\r\\n      <li class=\\\"active\\\">Editar</li>\\r\\n    </ol>\\r\\n    <app-edit-professor-form-admin (professorName)=\\\"setProfessorName($event)\\\"></app-edit-professor-form-admin>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer-admin></app-footer-admin>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-professor-page',\r\n  templateUrl: './edit-professor-page.component.html',\r\n  styleUrls: ['./edit-professor-page.component.css']\r\n})\r\nexport class EditProfessorPageComponent implements OnInit {\r\n\r\n  professorName: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setProfessorName(name) {\r\n    this.professorName = name;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { EditProfessorPageComponent } from './edit-professor-page.component';\r\nimport { EditProfessorPageRoutingModule } from './edit-professor-page-routing.module';\r\nimport { NavbarModule } from '../../components/navbar/navbar.module';\r\nimport { FooterModule } from '../../components/footer/footer.module';\r\nimport { EditProfessorFormModule } from '../../components/edit-professor-form/edit-professor-form.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    EditProfessorPageRoutingModule,\r\n    NavbarModule,\r\n    FooterModule,\r\n    EditProfessorFormModule\r\n  ],\r\n  declarations: [EditProfessorPageComponent]\r\n})\r\nexport class EditProfessorPageModule { }\r\n"],"sourceRoot":""}